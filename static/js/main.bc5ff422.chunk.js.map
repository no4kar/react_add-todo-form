{"version":3,"sources":["api/users.ts","api/todos.ts","services/User.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","getUserById","users","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","useState","setTitle","selectedUserId","setSelectedUserId","todosFromServer","setTodos","reduce","a","item","crntTodoId","setCrntTodoId","hasTitleError","setHasTitleError","hasSelectError","setHasSelectError","action","method","onSubmit","event","preventDefault","p","prevTodos","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc5ff422.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User, UserId } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport const getUserById = (\n  userId: UserId,\n  users: User[] = usersFromServer,\n): User | undefined => {\n  return users.find(user => user.id === userId);\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user,\n}) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/User';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={getUserById(todo.userId) as User} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (<TodoInfo todo={todo} />))\n      }\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { UserId } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState<UserId>(0);\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [crntTodoId, setCrntTodoId] = useState<number>(\n    todosFromServer\n      .reduce((a, item) => ((item.id > a) ? item.id : a), 0),\n  );\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectError, setHasSelectError] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasSelectError(false);\n  };\n\n  const handleSabmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasSelectError(!selectedUserId);\n\n    if (!title\n      || !selectedUserId) {\n      return;\n    }\n\n    setCrntTodoId(p => p + 1);\n    setTodos(prevTodos => [\n      ...prevTodos,\n      {\n        id: crntTodoId + 1,\n        title,\n        completed: false,\n        userId: selectedUserId,\n      }]);\n\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSabmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter title\"\n            onChange={handleTitle}\n          />\n\n          {hasTitleError\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleSelectUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasSelectError\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}